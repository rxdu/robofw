/*
 * Copyright (c) 2017 Linaro Limited
 *
 * SPDX-License-Identifier: Apache-2.0
 */

/dts-v1/;
#include <st/f4/stm32f405Xg.dtsi>
#include <st/f4/stm32f405rgtx-pinctrl.dtsi>
#include <dt-bindings/encoder/encoder.h>

/ {
    model = "TBot Control Board";
    compatible = "st,stm32f405";

    chosen {
        zephyr,console = &uart5;
        // zephyr,shell-uart = &usart6; // for bootloader
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zephyr,ccm = &ccm0;
        zephyr,can-primary = &can2;
        zephyr,code-partition = &slot0_partition;
    };

    leds {
        compatible = "gpio-leds";
        led0: led_1 {
            gpios = <&gpioc 1 GPIO_ACTIVE_LOW>;
            label = "User LD1";
        };
        led1: led_2 {
            gpios = <&gpioc 2 GPIO_ACTIVE_LOW>;
            label = "User LD2";
        };
        led2: led_3 {
            gpios = <&gpioc 3 GPIO_ACTIVE_LOW>;
            label = "User LD3";
        };
    };

    gpio_keys {
        compatible = "gpio-keys";
        dio0: motor_en11 {
            gpios = <&gpiob 0 GPIO_ACTIVE_HIGH>;
            label = "Motor EN1";
        };
        dio1: motor_dir1 {
            gpios = <&gpiob 1 GPIO_ACTIVE_HIGH>;
            label = "Motor DIR1";
        };
        dio2: motor_en2 {
            gpios = <&gpiob 12 GPIO_ACTIVE_HIGH>;
            label = "Motor EN2";
        };
        dio3: motor_dir2 {
            gpios = <&gpiob 13 GPIO_ACTIVE_HIGH>;
            label = "Motor DIR2";
        };
        dio4: light_ctrl {
            gpios = <&gpioc 8 GPIO_ACTIVE_HIGH>;
            label = "Light control";
        };
        // estop: exti_2 {
            //     gpios = <&gpioc 12 GPIO_ACTIVE_HIGH>;
            //     label = "Emergency Stop Button";
        // };
    };

    stm-temp {
        label = "DIE_TEMP";
        compatible = "st,stm32-temp";
        io-channels = <&adc1 16>;
        status = "okay";
    };

    // tim_enc1: tim_encoder1 {
    //     label = "TIM1_ENCODER";
    //     compatible = "st,stm32-encoder";
    //     st,prescaler = <200>;
    //     pinctrl-0 = <&tim1_ch1_pa8 &tim1_ch2_pa9>;
    //     #encoder-cells = <3>;
    //     status = "okay";
    // };

    pwm_outputs {
        compatible = "pwm-leds";
        dd_pwm0: pwm_output_0 {
            pwms = <&pwm2 3 100 PWM_POLARITY_NORMAL>;
        };
        dd_pwm1: pwm_output_1 {
            pwms = <&pwm2 4 100 PWM_POLARITY_NORMAL>;
        };
        dd_pwm2: pwm_output_2 {
            pwms = <&pwm12 1 100 PWM_POLARITY_NORMAL>;
        };
        dd_pwm3: pwm_output_3 {
            pwms = <&pwm12 2 100 PWM_POLARITY_NORMAL>;
        };
    };

    aliases {
        xled0 = &led0;
        xled1 = &led1;
        xled2 = &led2;
        xdio0 = &dio0;
        xdio1 = &dio1;
        xdio2 = &dio2;
        xdio3 = &dio3;
        xdio4 = &dio4;
        xpwm0 = &dd_pwm0;
        xpwm1 = &dd_pwm1;
        xpwm2 = &dd_pwm2;
        xpwm3 = &dd_pwm3;
        xuart0 = &uart4;
        xuart1 = &usart2;
        xuart2 = &usart3;
        xcan0 = &can1;
        xcan1 = &can2;
        xencoder0 = &encoder1;
        xencoder1 = &encoder3;
    };
};

&clk_hse {
    hse-bypass;
    clock-frequency = <DT_FREQ_M(25)>; /* STLink 8MHz clock */
    status = "okay";
};

&pll {
    div-m = <25>;
    mul-n = <336>;
    div-p = <2>;
    div-q = <4>;
    clocks = <&clk_hse>;
    status = "okay";
};

&rcc {
    clocks = <&pll>;
    clock-frequency = <DT_FREQ_M(168)>; /* highest value to get a precise USB clock */
    ahb-prescaler = <1>;
    apb1-prescaler = <4>;
    apb2-prescaler = <2>;
};

&adc1 {
    status = "okay";
};

&dma1 {
    status = "okay";
};

&dma2 {
    status = "okay";
};

// &i2c1 {
    //   status = "okay";
    //   clock-frequency = <I2C_BITRATE_FAST>;
// };

// &spi1 {
    //   status = "okay";
// };

//  dma-mask rx = 000000000000000 01 0 00 00 1 0 0 10 000000  0x10480
//  dma-mask tx = 000000000000000 01 0 00 00 1 0 0 01 000000  0x10440
// Reference: https: //docs.zephyrproject.org/2.6.0/reference/devicetree/bindings/dma/st%2Cstm32-dma-v1.html#dtbinding-st-stm32-dma-v1
&usart2 {
    pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
    current-speed = <115200>;
    status = "okay";
    dmas = <&dma1 5 4 0x10480 0x03>, <&dma1 6 4 0x10440 0x03>;
    dma-names = "rx", "tx";
};

&usart3 {
    pinctrl-0 = <&usart3_tx_pc10 &usart3_rx_pc11>;
    current-speed = <115200>;
    status = "okay";
    dmas = <&dma1 3 4 0x10480 0x03>, <&dma1 1 4 0x10440 0x03>;
    dma-names = "rx", "tx";
};

&uart4 {
    status = "okay";
    pinctrl-0 = <&uart4_tx_pa0 &uart4_rx_pa1>;
    current-speed = <100000>;
    dmas = <&dma1 2 4 0x10480 0x03>;
    dma-names = "rx";
};

&uart5 {
    //   parity = "0";
    pinctrl-0 = <&uart5_tx_pc12 &uart5_rx_pd2>;
    current-speed = <115200>;
    status = "okay";
};

&usbotg_fs {
    status = "okay";
};

&timers1 {
    status = "okay";

    encoder1: encoder {
        label = "TIM1_ENCODER";
        compatible = "st,stm32-encoder";
        st,encoder-mode = <ENCODER_MODE_X4_TI12>;
        st,prescaler = <0>;
        pinctrl-0 = <&tim1_ch1_pa8 &tim1_ch2_pa9>;
        status = "okay";
    };
};

&timers2 {
    status = "okay";

    pwm2: pwm {
        status = "okay";
        pinctrl-0 = <&tim2_ch3_pb10 &tim2_ch4_pb11>;
    };
};

&timers3 {
    status = "okay";

    encoder3: encoder {
        label = "TIM3_ENCODER";
        compatible = "st,stm32-encoder";
        st,encoder-mode = <ENCODER_MODE_X4_TI12>;
        st,prescaler = <0>;
        pinctrl-0 = <&tim3_ch1_pc6 &tim3_ch2_pc7>;
        status = "okay";
    };
};

&timers12 {
    status = "okay";

    pwm12: pwm {
        status = "okay";
        pinctrl-0 = <&tim12_ch1_pb14 &tim12_ch2_pb15>;
    };
};

// &rtc {
    //   status = "okay";
// };

// &iwdg {
    //   status = "okay";
// };

&can1 {
    pinctrl-0 = <&can1_rx_pb8 &can1_tx_pb9>;
    bus-speed = <500000>;
    sjw = <1>;
    prop-seg = <0>;
    phase-seg1 = <10>;
    phase-seg2 = <1>;
    status = "okay";
};

&can2 {
    pinctrl-0 = <&can2_rx_pb5 &can2_tx_pb6>;
    bus-speed = <500000>;
    sjw = <1>;
    prop-seg = <0>;
    phase-seg1 = <10>;
    phase-seg2 = <1>;
    status = "okay";
};

&rng {
    status = "okay";
};

&flash0 {
    /*
     * For more information, see:
     * https: //docs.zephyrproject.org/latest/reference/devicetree/index.html#fixed-flash-partitions
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        /* 64KB for bootloader */
        boot_partition: partition@0 {
            label = "mcuboot";
            reg = <0x00000000 0x00010000>;
            read-only;
        };

        /* storage: 64KB for settings */
        storage_partition: partition@10000 {
            label = "storage";
            reg = <0x00010000 0x00010000>;
        };

        /* application image slot: 256KB */
        slot0_partition: partition@20000 {
            label = "image-0";
            reg = <0x00020000 0x00040000>;
        };

        /* backup slot: 256KB */
        slot1_partition: partition@60000 {
            label = "image-1";
            reg = <0x00060000 0x00040000>;
        };

        /* swap slot: 128KB */
        scratch_partition: partition@a0000 {
            label = "image-scratch";
            reg = <0x000a0000 0x00020000>;
        };

    };
};